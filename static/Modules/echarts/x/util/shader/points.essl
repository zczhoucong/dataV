@export ecx.points.vertex

uniform mat4 worldViewProjection : WORLDVIEWPROJECTION;
uniform float elapsedTime : 0;

attribute vec3 position : POSITION;
attribute vec4 color : COLOR;
attribute float size;

#ifdef ANIMATING
attribute float delay;
#endif

varying vec4 v_Color;

void main()
{
    gl_Position = worldViewProjection * vec4(position, 1.0);

    #ifdef ANIMATING
        gl_PointSize = size * (sin((elapsedTime + delay) * 3.14) * 0.5 + 1.0);
    #else
        gl_PointSize = size;
    #endif

    v_Color = color;
}

@end

@export ecx.points.fragment

varying vec4 v_Color;
uniform sampler2D sprite;

void main()
{
    vec4 color = v_Color;

    #ifdef SPRITE_ENABLED
        color *= texture2D(sprite, gl_PointCoord);
    #endif

    gl_FragColor = color;
}
@end